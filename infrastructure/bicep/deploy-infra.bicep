targetScope = 'resourceGroup'

// ------------------
//    PARAMETERS
// ------------------

@description('The location where the resources will be created.')
param location string = resourceGroup().location

@description('Optional. The prefix to be used for all resources created by this template.')
param prefix string = ''

@description('Optional. The suffix to be used for all resources created by this template.')
param suffix string = ''

@description('Optional. The tags to be assigned to the created resources.')
param tags object = {
  solution: 'bluegreen'
  shortName: 'bg'
  iac: 'bicep'
  environment: 'aca'
}

// Container Apps Env / Log Analytics Workspace / Application Insights
@description('Optional. The name of the container apps environment. If set, it overrides the name generated by the template.')
param containerAppsEnvironmentName string = '${prefix}cae-${uniqueString(resourceGroup().id)}${suffix}'

@description('Optional. The name of the log analytics workspace. If set, it overrides the name generated by the template.')
param logAnalyticsWorkspaceName string = '${prefix}log-${uniqueString(resourceGroup().id)}${suffix}'

@description('Optional. The name of the application insights. If set, it overrides the name generated by the template.')
param applicationInsightName string = '${prefix}appi-${uniqueString(resourceGroup().id)}${suffix}'

// ------------------
//    RESOURCES
// ------------------

module containerAppsEnvironment 'modules/container-apps-environment.bicep' =  {
  name: containerAppsEnvironmentName
  params: {
    location: location
    tags: tags
    containerAppsEnvironmentName: containerAppsEnvironmentName
    logAnalyticsWorkspaceName: logAnalyticsWorkspaceName
    applicationInsightName: applicationInsightName
  }
}

module acr 'modules/container-registry.bicep' =  {
  name: 'acr-${uniqueString(resourceGroup().id)}'
  params: {
    acrName: 'acr${uniqueString(resourceGroup().id)}'
    location: location
    tags: tags
  }
}

//This deploy an initial release of the app
module deployFirstVersion 'deploy-container-apps.bicep' = {
  name: 'deploy-first-version'
  params: {
    location: location
    containerAppsEnvironmentName: containerAppsEnvironmentName
    containerRegistryName: acr.outputs.acrName
    bgServiceName: 'bgappservice'
  }
  dependsOn: [
    containerAppsEnvironment
  ]
}
